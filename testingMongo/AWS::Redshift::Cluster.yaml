Parameters:
  ClusterIdentifierFor$$1:
    Type: String
    Description: The identifier of the Redshift cluster for $$1
    Default: $$1

  DatabaseNameFor$$1:
    Type: String
    Description: The name of the first database to be created when the cluster is created for $$1
    Default: dev

  MasterUsernameFor$$1:
    Type: String
    Description: Username for the master user for $$1
    Default: admin
    MinLength: 1
    MaxLength: 128

  NodeTypeFor$$1:
    Type: String
    Description: The node type to be provisioned for $$1
    Default: dc2.large
    AllowedValues:
      - dc2.large
      - dc2.8xlarge
      - ra3.xlplus
      - ra3.4xlarge
      - ra3.16xlarge

  NumberOfNodesFor$$1:
    Type: Number
    Description: Number of compute nodes in the cluster for $$1
    Default: 2
    MinValue: 1
    MaxValue: 100

Resources:
  $$1:
    Type: AWS::Redshift::Cluster
    Properties:
      ClusterIdentifier: !Ref ClusterIdentifierFor$$1
      DBName: !Ref DatabaseNameFor$$1
      MasterUsername: !Ref MasterUsernameFor$$1
      NodeType: !Ref NodeTypeFor$$1
      NumberOfNodes: !Ref NumberOfNodesFor$$1
      ClusterType: !If [IsMultiNodeFor$$1, 'multi-node', 'single-node']
      ClusterSubnetGroupName: !Ref $$2
      PubliclyAccessible: false
      Encrypted: true
      Port: 5439
      IamRoles: []
      ManageMasterPassword: true  

Conditions:
  IsMultiNode: !Not [!Equals [!Ref NumberOfNodes, 1]]

Outputs:
  RedshiftClusterEndpointFor$$1:
    Description: Endpoint for Redshift cluster for $$1
    Value: !Sub '${$$1.Endpoint.Address}:${$$1.Endpoint.Port}'

Dependencies:
["AWS::Redshift::ClusterSubnetGroup"]

Disclaimers:
["AWS should manage the password as the ManageMasterPassword property is set to true"]