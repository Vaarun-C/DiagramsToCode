AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template for aae8f8f3-8125-4868-a8e5-eac1cc42812f.png
Conditions: 











Parameters: 
  InstanceTypeForMyInstance1:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type for MyInstance1.
  AMIIdForMyInstance1:
    Type: AWS::EC2::Image::Id
    Default: ami-0c02fb55956c7d316
    Description: AMI ID for the EC2 instance for MyInstance1.
  KeyPairNameForMyInstance1:
    Type: String
    Description: Name of an existing EC2 KeyPair for SSH access for MyInstance1.

  HostedZoneIdForMyRecordSet1:
    Type: String
    Description: The Route 53 Hosted Zone ID for your domain for MyRecordSet1

  InstanceTypeForMyInstance2:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type for MyInstance2.
  AMIIdForMyInstance2:
    Type: AWS::EC2::Image::Id
    Default: ami-0c02fb55956c7d316
    Description: AMI ID for the EC2 instance for MyInstance2.
  KeyPairNameForMyInstance2:
    Type: String
    Description: Name of an existing EC2 KeyPair for SSH access for MyInstance2.

  InstanceTypeForMyInstance3:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type for MyInstance3.
  AMIIdForMyInstance3:
    Type: AWS::EC2::Image::Id
    Default: ami-0c02fb55956c7d316
    Description: AMI ID for the EC2 instance for MyInstance3.
  KeyPairNameForMyInstance3:
    Type: String
    Description: Name of an existing EC2 KeyPair for SSH access for MyInstance3.

  InstanceTypeForMyInstance4:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type for MyInstance4.
  AMIIdForMyInstance4:
    Type: AWS::EC2::Image::Id
    Default: ami-0c02fb55956c7d316
    Description: AMI ID for the EC2 instance for MyInstance4.
  KeyPairNameForMyInstance4:
    Type: String
    Description: Name of an existing EC2 KeyPair for SSH access for MyInstance4.

  InstanceTypeForMyInstance5:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type for MyInstance5.
  AMIIdForMyInstance5:
    Type: AWS::EC2::Image::Id
    Default: ami-0c02fb55956c7d316
    Description: AMI ID for the EC2 instance for MyInstance5.
  KeyPairNameForMyInstance5:
    Type: String
    Description: Name of an existing EC2 KeyPair for SSH access for MyInstance5.

  NotebookInstanceNameForMyNotebookInstance1:
    Type: String
    Default: "MyNotebookInstance1"
    Description: "The name of the SageMaker Notebook Instance for MyNotebookInstance1."
  NotebookInstanceTypeForMyNotebookInstance1:
    Type: String
    Default: "ml.t2.medium"
    AllowedValues:
      - "ml.t2.medium"
      - "ml.m5.large"
      - "ml.m5.xlarge"
      - "ml.c5.large"
      - "ml.c5.xlarge"
    Description: "The instance type for the SageMaker Notebook Instance for MyNotebookInstance1."
  RootAccessForMyNotebookInstance1:
    Type: String
    Default: "Disabled"
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Description: "Whether the SageMaker Notebook Instance has root access for MyNotebookInstance1."

  NotebookInstanceNameForMyNotebookInstance2:
    Type: String
    Default: "MyNotebookInstance2"
    Description: "The name of the SageMaker Notebook Instance for MyNotebookInstance2."
  NotebookInstanceTypeForMyNotebookInstance2:
    Type: String
    Default: "ml.t2.medium"
    AllowedValues:
      - "ml.t2.medium"
      - "ml.m5.large"
      - "ml.m5.xlarge"
      - "ml.c5.large"
      - "ml.c5.xlarge"
    Description: "The instance type for the SageMaker Notebook Instance for MyNotebookInstance2."
  RootAccessForMyNotebookInstance2:
    Type: String
    Default: "Disabled"
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Description: "Whether the SageMaker Notebook Instance has root access for MyNotebookInstance2."

  SubnetCidrBlockForMySubnet1:
    Description: The CIDR block for the new subnet
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: '^(([0-9]{1,3})\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'
    ConstraintDescription: Must be a valid CIDR block.
  AvailabilityZoneForMySubnet1:
    Description: The Availability Zone for the subnet
    Type: String
    Default: us-east-1a  # Replace with your desired AZ
  DomainNameForMyDomainName1:
    Type: String
    Description: The domain name to use for the API for MyDomainName1

  ExecutionRoleNameForMyRoleForSageMakerExecution1:
    Type: String
    Default: "MyRoleForSageMakerExecution1"
    Description: "The name of the IAM role for the SageMaker Notebook Instance for MyRoleForSageMakerExecution1."

  VPCCidrBlockForMyVPC1:
    Description: The CIDR block for the VPC
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '^(([0-9]{1,3})\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'
    ConstraintDescription: Must be a valid CIDR block.

Resources: 
  MyInstance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeForMyInstance1
      ImageId: !Ref AMIIdForMyInstance1
      KeyName: !Ref KeyPairNameForMyInstance1
      SubnetId: !Ref MySubnet1
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "Hello, World!" > /var/www/html/index.html
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd

  MyRecordSet1:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneIdForMyRecordSet1
      Name: !Ref DomainNameForMyDomainName1
      Type: A
      AliasTarget:
        DNSName: !GetAtt MyDomainName1.RegionalDomainName
        HostedZoneId: !GetAtt MyDomainName1.RegionalHostedZoneId

  MyInstance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeForMyInstance2
      ImageId: !Ref AMIIdForMyInstance2
      KeyName: !Ref KeyPairNameForMyInstance2
      SubnetId: !Ref MySubnet1
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "Hello, World!" > /var/www/html/index.html
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd

  MyInstance3:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeForMyInstance3
      ImageId: !Ref AMIIdForMyInstance3
      KeyName: !Ref KeyPairNameForMyInstance3
      SubnetId: !Ref MySubnet1
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "Hello, World!" > /var/www/html/index.html
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd

  MyInstance4:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeForMyInstance4
      ImageId: !Ref AMIIdForMyInstance4
      KeyName: !Ref KeyPairNameForMyInstance4
      SubnetId: !Ref MySubnet1
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "Hello, World!" > /var/www/html/index.html
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd

  MyInstance5:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeForMyInstance5
      ImageId: !Ref AMIIdForMyInstance5
      KeyName: !Ref KeyPairNameForMyInstance5
      SubnetId: !Ref MySubnet1
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "Hello, World!" > /var/www/html/index.html
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd

  MyNotebookInstance1:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      NotebookInstanceName: !Ref NotebookInstanceNameForMyNotebookInstance1
      InstanceType: !Ref NotebookInstanceTypeForMyNotebookInstance1
      RoleArn: !GetAtt MyRoleForSageMakerExecution1.Arn
      RootAccess: !Ref RootAccessForMyNotebookInstance1
      VolumeSizeInGB: 10 # Adjust the volume size as needed
      DirectInternetAccess: "Enabled"

  MyNotebookInstance2:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      NotebookInstanceName: !Ref NotebookInstanceNameForMyNotebookInstance2
      InstanceType: !Ref NotebookInstanceTypeForMyNotebookInstance2
      RoleArn: !GetAtt MyRoleForSageMakerExecution1.Arn
      RootAccess: !Ref RootAccessForMyNotebookInstance2
      VolumeSizeInGB: 10 # Adjust the volume size as needed
      DirectInternetAccess: "Enabled"

  MySubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC1
      CidrBlock: !Ref SubnetCidrBlockForMySubnet1
      AvailabilityZone: !Ref AvailabilityZoneForMySubnet1
      MapPublicIpOnLaunch: true  # Set to true if you want instances to have public IPs by default
      Tags:
        - Key: Name
          Value: MySubnet1
  MyDomainName1:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref DomainNameForMyDomainName1
      RegionalCertificateArn: !Ref MyCertificate1
      EndpointConfiguration:
        Types:
          - REGIONAL

  MyRoleForSageMakerExecution1:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ExecutionRoleNameForMyRoleForSageMakerExecution1
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: "SageMakerNotebookPolicyForMyRoleForSageMakerExecution1"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - sagemaker:*
                Resource: "*"

  MyVPC1:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCidrBlockForMyVPC1
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC1
  MyCertificate1:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainNameForMyDomainName1
      ValidationMethod: DNS

Outputs: 
  InstancePublicIpForMyInstance1:
    Description: Public IP address of the EC2 instance for MyInstance1
    Value: !GetAtt MyInstance1.PublicIp
  InstanceIdForMyInstance1:
    Description: ID of the EC2 instance for MyInstance1
    Value: !Ref MyInstance1


  InstancePublicIpForMyInstance2:
    Description: Public IP address of the EC2 instance for MyInstance2
    Value: !GetAtt MyInstance2.PublicIp
  InstanceIdForMyInstance2:
    Description: ID of the EC2 instance for MyInstance2
    Value: !Ref MyInstance2

  InstancePublicIpForMyInstance3:
    Description: Public IP address of the EC2 instance for MyInstance3
    Value: !GetAtt MyInstance3.PublicIp
  InstanceIdForMyInstance3:
    Description: ID of the EC2 instance for MyInstance3
    Value: !Ref MyInstance3

  InstancePublicIpForMyInstance4:
    Description: Public IP address of the EC2 instance for MyInstance4
    Value: !GetAtt MyInstance4.PublicIp
  InstanceIdForMyInstance4:
    Description: ID of the EC2 instance for MyInstance4
    Value: !Ref MyInstance4

  InstancePublicIpForMyInstance5:
    Description: Public IP address of the EC2 instance for MyInstance5
    Value: !GetAtt MyInstance5.PublicIp
  InstanceIdForMyInstance5:
    Description: ID of the EC2 instance for MyInstance5
    Value: !Ref MyInstance5

  NotebookInstanceNameForMyNotebookInstance1:
    Description: "The name of the SageMaker Notebook Instance for MyNotebookInstance1."
    Value: !Ref MyNotebookInstance1
  NotebookInstanceUrlForMyNotebookInstance1:
    Description: "The URL to access the SageMaker Notebook Instance."
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/openNotebook/${NotebookInstanceNameForMyNotebookInstance1}"

  NotebookInstanceNameForMyNotebookInstance2:
    Description: "The name of the SageMaker Notebook Instance for MyNotebookInstance2."
    Value: !Ref MyNotebookInstance2
  NotebookInstanceUrlForMyNotebookInstance2:
    Description: "The URL to access the SageMaker Notebook Instance."
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/openNotebook/${NotebookInstanceNameForMyNotebookInstance2}"

  SubnetId:
    Description: The ID of the created subnet for MySubnet1
    Value: !Ref MySubnet1

  ExecutionRoleArnForMyRoleForSageMakerExecution1:
    Description: "The ARN of the SageMaker Notebook execution role for MyRoleForSageMakerExecution1."
    Value: !GetAtt MyRoleForSageMakerExecution1.Arn
  VPCId:
    Description: The ID of the created VPC for MyVPC1
    Value: !Ref MyVPC1

