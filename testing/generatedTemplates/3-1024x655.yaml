AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template for 3-1024x655.png
Conditions: 

  IsMultiNodeForMyCluster1: !Not [!Equals [!Ref NumberOfNodesForMyCluster1, 1]]





  HasEmailSubscriptionForMySubscription1: !Not [!Equals [!Ref EmailAddressForMySubscription1, ""]]






Parameters: 
  DomainNameForMyDomain1:
    Type: String
    Default: "MyDomain1"
    Description: "The name of the OpenSearch domain for MyDomain1."
  InstanceTypeForMyDomain1:
    Type: String
    Default: "m6g.large.search"
    Description: "The instance type for the data nodes in the OpenSearch cluster for MyDomain1."
  InstanceCountForMyDomain1:
    Type: Number
    Default: 2
    Description: "The number of data nodes in the OpenSearch cluster for MyDomain1."
  MasterInstanceTypeForMyDomain1:
    Type: String
    Default: "m6g.medium.search"
    Description: "The instance type for the dedicated master nodes for MyDomain1."
  MasterInstanceCountForMyDomain1:
    Type: Number
    Default: 3
    Description: "The number of dedicated master nodes in the OpenSearch cluster for MyDomain1."
  VolumeSizeForMyDomain1:
    Type: Number
    Default: 10
    Description: "The size (in GB) of the EBS volumes attached to each data node for MyDomain1."

  HostedZoneIdForMyRecordSet1:
    Type: String
    Description: The Route 53 Hosted Zone ID for your domain for MyRecordSet1

  DomainNameForMyDomain2:
    Type: String
    Default: "MyDomain2"
    Description: "The name of the OpenSearch domain for MyDomain2."
  InstanceTypeForMyDomain2:
    Type: String
    Default: "m6g.large.search"
    Description: "The instance type for the data nodes in the OpenSearch cluster for MyDomain2."
  InstanceCountForMyDomain2:
    Type: Number
    Default: 2
    Description: "The number of data nodes in the OpenSearch cluster for MyDomain2."
  MasterInstanceTypeForMyDomain2:
    Type: String
    Default: "m6g.medium.search"
    Description: "The instance type for the dedicated master nodes for MyDomain2."
  MasterInstanceCountForMyDomain2:
    Type: Number
    Default: 3
    Description: "The number of dedicated master nodes in the OpenSearch cluster for MyDomain2."
  VolumeSizeForMyDomain2:
    Type: Number
    Default: 10
    Description: "The size (in GB) of the EBS volumes attached to each data node for MyDomain2."

  ClusterIdentifierForMyCluster1:
    Type: String
    Description: The identifier of the Redshift cluster for MyCluster1
    Default: MyCluster1
  DatabaseNameForMyCluster1:
    Type: String
    Description: The name of the first database to be created when the cluster is created for MyCluster1
    Default: dev
  MasterUsernameForMyCluster1:
    Type: String
    Description: Username for the master user for MyCluster1
    Default: admin
    MinLength: 1
    MaxLength: 128
  NodeTypeForMyCluster1:
    Type: String
    Description: The node type to be provisioned for MyCluster1
    Default: dc2.large
    AllowedValues:
      - dc2.large
      - dc2.8xlarge
      - ra3.xlplus
      - ra3.4xlarge
      - ra3.16xlarge
  NumberOfNodesForMyCluster1:
    Type: Number
    Description: Number of compute nodes in the cluster for MyCluster1
    Default: 2
    MinValue: 1
    MaxValue: 100

  EnvironmentForMyComputeEnvironment1:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name for resource tagging for MyComputeEnvironment1
  MaxvCpusForMyComputeEnvironment1:
    Type: Number
    Default: 16
    Description: Maximum vCPUs for the compute environment for MyComputeEnvironment1
  DesiredvCpusForMyComputeEnvironment1:
    Type: Number
    Default: 4
    Description: Desired vCPUs for the compute environment for MyComputeEnvironment1

  TopicNameForMyTopic1:
    Type: String
    Default: "MyTopic1Topic"
    Description: "The name of the SNS topic for MyTopic1."
  DisplayNameForMyTopic1:
    Type: String
    Default: "MyTopic1DisplayName"
    Description: "The display name for the SNS topic for MyTopic1."



  EmailAddressForMySubscription1:
    Type: String
    Default: ""
    Description: "The email address to subscribe to the topic for MySubscription1. Leave blank if no email subscription is required."

  SubnetCidrBlockForMySubnet1:
    Description: The CIDR block for the new subnet
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: '^(([0-9]{1,3})\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'
    ConstraintDescription: Must be a valid CIDR block.
  AvailabilityZoneForMySubnet1:
    Description: The Availability Zone for the subnet
    Type: String
    Default: us-east-1a  # Replace with your desired AZ
  DomainNameForMyDomainName1:
    Type: String
    Description: The domain name to use for the API for MyDomainName1




  VPCCidrBlockForMyVPC1:
    Description: The CIDR block for the VPC
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '^(([0-9]{1,3})\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'
    ConstraintDescription: Must be a valid CIDR block.

Resources: 
  MyDomain1:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: !Ref DomainNameForMyDomain1
      EngineVersion: "OpenSearch_2.9"
      ClusterConfig:
        InstanceType: !Ref InstanceTypeForMyDomain1
        InstanceCount: !Ref InstanceCountForMyDomain1
        DedicatedMasterEnabled: true
        ZoneAwarenessEnabled: true
        DedicatedMasterType: !Ref MasterInstanceTypeForMyDomain1
        DedicatedMasterCount: !Ref MasterInstanceCountForMyDomain1
      EBSOptions:
        EBSEnabled: true
        VolumeSize: !Ref VolumeSizeForMyDomain1
        VolumeType: "gp3"
      VPCOptions:
        SubnetIds: !Ref MySubnet1
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
      AdvancedOptions:
        "rest.action.multi.allow_explicit_index": "true"
      LogPublishingOptions:
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/OpenSearch/${DomainNameForMyDomain1}-search-slow"
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/OpenSearch/${DomainNameForMyDomain1}-index-slow"
          Enabled: true
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/OpenSearch/${DomainNameForMyDomain1}-app-logs"
          Enabled: true

  MyRecordSet1:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneIdForMyRecordSet1
      Name: !Ref DomainNameForMyDomainName1
      Type: A
      AliasTarget:
        DNSName: !GetAtt MyDomainName1.RegionalDomainName
        HostedZoneId: !GetAtt MyDomainName1.RegionalHostedZoneId

  MyDomain2:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: !Ref DomainNameForMyDomain2
      EngineVersion: "OpenSearch_2.9"
      ClusterConfig:
        InstanceType: !Ref InstanceTypeForMyDomain2
        InstanceCount: !Ref InstanceCountForMyDomain2
        DedicatedMasterEnabled: true
        ZoneAwarenessEnabled: true
        DedicatedMasterType: !Ref MasterInstanceTypeForMyDomain2
        DedicatedMasterCount: !Ref MasterInstanceCountForMyDomain2
      EBSOptions:
        EBSEnabled: true
        VolumeSize: !Ref VolumeSizeForMyDomain2
        VolumeType: "gp3"
      VPCOptions:
        SubnetIds: !Ref MySubnet1
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
      AdvancedOptions:
        "rest.action.multi.allow_explicit_index": "true"
      LogPublishingOptions:
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/OpenSearch/${DomainNameForMyDomain2}-search-slow"
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/OpenSearch/${DomainNameForMyDomain2}-index-slow"
          Enabled: true
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/OpenSearch/${DomainNameForMyDomain2}-app-logs"
          Enabled: true

  MyCluster1:
    Type: AWS::Redshift::Cluster
    Properties:
      ClusterIdentifier: !Ref ClusterIdentifierForMyCluster1
      DBName: !Ref DatabaseNameForMyCluster1
      MasterUsername: !Ref MasterUsernameForMyCluster1
      NodeType: !Ref NodeTypeForMyCluster1
      NumberOfNodes: !Ref NumberOfNodesForMyCluster1
      ClusterType: !If [IsMultiNodeForMyCluster1, 'multi-node', 'single-node']
      ClusterSubnetGroupName: !Ref MyClusterSubnetGroup1
      PubliclyAccessible: false
      Encrypted: true
      Port: 5439
      IamRoles: []
      ManageMasterPassword: true  # AWS will manage the password

  MyComputeEnvironment1:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Sub ${AWS::StackName}-compute-env
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        Type: EC2
        MaxvCpus: !Ref MaxvCpusForMyComputeEnvironment1
        DesiredvCpus: !Ref DesiredvCpusForMyComputeEnvironment1
        MinvCpus: 0
        InstanceTypes:
          - optimal
        Subnets:
          - !Ref MySubnet1
        InstanceRole: !Ref MyRoleForBatchInstance1
        AllocationStrategy: SPOT_CAPACITY_OPTIMIZED
        BidPercentage: 60
      ServiceRole: !GetAtt MyRoleForBatchService1.Arn
      Tags:
        Environment: !Ref EnvironmentForMyComputeEnvironment1

  MyTopic1:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Ref TopicNameForMyTopic1
      DisplayName: !Ref DisplayNameForMyTopic1

  MyJobQueue1:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub ${AWS::StackName}-job-queue
      Priority: 1
      State: ENABLED
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref MyComputeEnvironment1
      Tags:
        Environment: !Ref EnvironmentForMyComputeEnvironment1

  MyJobDefinition1:
    Type: AWS::Batch::JobDefinition
    Properties:
      JobDefinitionName: !Sub ${AWS::StackName}-job-definition
      Type: container
      PlatformCapabilities:
        - EC2
      ContainerProperties:
        Image: public.ecr.aws/amazonlinux/amazonlinux:2
        Command:
          - "echo"
          - "Hello World"
        ResourceRequirements:
          - Type: VCPU
            Value: "1"
          - Type: MEMORY
            Value: "2048"
        ExecutionRoleArn: !GetAtt MyRoleForBatchService1.Arn
      RetryStrategy:
        Attempts: 3
      Timeout:
        AttemptDurationSeconds: 300

  MySubscription1:
    Type: "AWS::SNS::Subscription"
    Condition: HasEmailSubscriptionForMySubscription1
    Properties:
      Protocol: "email"
      Endpoint: !Ref EmailAddressForMySubscription1
      TopicArn: !Ref MyTopic1

  MySubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC1
      CidrBlock: !Ref SubnetCidrBlockForMySubnet1
      AvailabilityZone: !Ref AvailabilityZoneForMySubnet1
      MapPublicIpOnLaunch: true  # Set to true if you want instances to have public IPs by default
      Tags:
        - Key: Name
          Value: MySubnet1
  MyDomainName1:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref DomainNameForMyDomainName1
      RegionalCertificateArn: !Ref MyCertificate1
      EndpointConfiguration:
        Types:
          - REGIONAL

  MyClusterSubnetGroup1:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties:
      Description: Subnet group for Redshift cluster for MyClusterSubnetGroup1
      SubnetIds: 
        - !Ref MySubnet1

  MyRoleForBatchInstance1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  MyRoleForBatchService1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
  MyVPC1:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCidrBlockForMyVPC1
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC1
  MyCertificate1:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainNameForMyDomainName1
      ValidationMethod: DNS

Outputs: 
  OpenSearchDomainArnForMyDomain1:
    Description: "The ARN of the OpenSearch Domain"
    Value: !GetAtt MyDomain1.Arn
  OpenSearchDomainEndpointForMyDomain1:
    Description: "The endpoint of the OpenSearch Domain"
    Value: !GetAtt MyDomain1.DomainEndpoint


  OpenSearchDomainArnForMyDomain2:
    Description: "The ARN of the OpenSearch Domain"
    Value: !GetAtt MyDomain2.Arn
  OpenSearchDomainEndpointForMyDomain2:
    Description: "The endpoint of the OpenSearch Domain"
    Value: !GetAtt MyDomain2.DomainEndpoint

  RedshiftClusterEndpointForMyCluster1:
    Description: Endpoint for Redshift cluster for MyCluster1
    Value: !Sub '${MyCluster1.Endpoint.Address}:${MyCluster1.Endpoint.Port}'

  ComputeEnvironmentArnForMyComputeEnvironment1:
    Description: ARN of Batch Compute Environment for MyComputeEnvironment1
    Value: !Ref MyComputeEnvironment1
    Export:
      Name: !Sub ${AWS::StackName}-compute-env-arn

  TopicArnForMyTopic1:
    Description: "The ARN of the SNS topic for MyTopic1."
    Value: !Ref MyTopic1
  TopicNameOutputForMyTopic1:
    Description: "The name of the SNS topic for MyTopic1."
    Value: !Ref TopicNameForMyTopic1
  JobQueueArnForMyJobQueue1:
    Description: ARN of Batch Job Queue for MyJobQueue1
    Value: !Ref MyJobQueue1
    Export:
      Name: !Sub ${AWS::StackName}-job-queue-arn

  JobDefinitionArnForMyJobDefinition1:
    Description: ARN of Batch Job Definition for MyJobDefinition1
    Value: !Ref MyJobDefinition1
    Export:
      Name: !Sub ${AWS::StackName}-job-definition-arn


  SubnetId:
    Description: The ID of the created subnet for MySubnet1
    Value: !Ref MySubnet1




  VPCId:
    Description: The ID of the created VPC for MyVPC1
    Value: !Ref MyVPC1

