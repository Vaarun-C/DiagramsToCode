AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template for luminai-refinery-advisor-on-aws.png
Conditions: 
  VersioningEnabledForMyBucket1: !Equals [!Ref EnableVersioningForMyBucket1, true]

Parameters: 
  BucketNameForMyBucket1:
    Description: The name of the S3 bucket
    Type: String
  EnableVersioningForMyBucket1:
    Description: Enable versioning for S3 buckets
    Type: String
    Default: false
    AllowedValues: [true, false]
  ClusterNameForMyCluster1:
    Description: The name of the ECS cluster
    Type: String
    Default: MyCluster1
  TaskDefinitionNameForMyTaskDefinition1:
    Description: The name of the ECS task definition
    Type: String
    Default: MyTaskDefinition1
  ContainerNameForMyTaskDefinition1:
    Description: The name of the container
    Type: String
    Default: MyContainerForMyTaskDefinition1
  ContainerImageForMyTaskDefinition1:
    Description: The Docker image to use for the container
    Type: String
    Default: amazon/amazon-ecs-sample
  ContainerPortForMyTaskDefinition1:
    Description: The port on which the container listens
    Type: Number
    Default: 80
  TaskDefinitionNameForMyTaskDefinition2:
    Description: The name of the ECS task definition
    Type: String
    Default: MyTaskDefinition2
  ContainerNameForMyTaskDefinition2:
    Description: The name of the container
    Type: String
    Default: MyContainerForMyTaskDefinition2
  ContainerImageForMyTaskDefinition2:
    Description: The Docker image to use for the container
    Type: String
    Default: amazon/amazon-ecs-sample
  ContainerPortForMyTaskDefinition2:
    Description: The port on which the container listens
    Type: Number
    Default: 80
  TaskDefinitionNameForMyTaskDefinition3:
    Description: The name of the ECS task definition
    Type: String
    Default: MyTaskDefinition3
  ContainerNameForMyTaskDefinition3:
    Description: The name of the container
    Type: String
    Default: MyContainerForMyTaskDefinition3
  ContainerImageForMyTaskDefinition3:
    Description: The Docker image to use for the container
    Type: String
    Default: amazon/amazon-ecs-sample
  ContainerPortForMyTaskDefinition3:
    Description: The port on which the container listens
    Type: Number
    Default: 80
  TaskDefinitionNameForMyTaskDefinition4:
    Description: The name of the ECS task definition
    Type: String
    Default: MyTaskDefinition4
  ContainerNameForMyTaskDefinition4:
    Description: The name of the container
    Type: String
    Default: MyContainerForMyTaskDefinition4
  ContainerImageForMyTaskDefinition4:
    Description: The Docker image to use for the container
    Type: String
    Default: amazon/amazon-ecs-sample
  ContainerPortForMyTaskDefinition4:
    Description: The port on which the container listens
    Type: Number
    Default: 80
  TaskDefinitionNameForMyTaskDefinition5:
    Description: The name of the ECS task definition
    Type: String
    Default: MyTaskDefinition5
  ContainerNameForMyTaskDefinition5:
    Description: The name of the container
    Type: String
    Default: MyContainerForMyTaskDefinition5
  ContainerImageForMyTaskDefinition5:
    Description: The Docker image to use for the container
    Type: String
    Default: amazon/amazon-ecs-sample
  ContainerPortForMyTaskDefinition5:
    Description: The port on which the container listens
    Type: Number
    Default: 80
  TaskDefinitionNameForMyTaskDefinition6:
    Description: The name of the ECS task definition
    Type: String
    Default: MyTaskDefinition6
  ContainerNameForMyTaskDefinition6:
    Description: The name of the container
    Type: String
    Default: MyContainerForMyTaskDefinition6
  ContainerImageForMyTaskDefinition6:
    Description: The Docker image to use for the container
    Type: String
    Default: amazon/amazon-ecs-sample
  ContainerPortForMyTaskDefinition6:
    Description: The port on which the container listens
    Type: Number
    Default: 80
  VPCCidrBlockForMyVPC1:
    Description: The CIDR block for the VPC
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '^(([0-9]{1,3})\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'
    ConstraintDescription: Must be a valid CIDR block.
  SubnetCidrBlockForMySubnet1:
    Description: The CIDR block for the new subnet
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: '^(([0-9]{1,3})\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'
    ConstraintDescription: Must be a valid CIDR block.
  AvailabilityZoneForMySubnet1:
    Description: The Availability Zone for the subnet
    Type: String
    Default: us-east-1a  # Replace with your desired AZ
  BrokerNameForMyBroker1:
    Type: String
    Default: "MyBroker1"
    Description: "The name of the Amazon MQ broker for MyBroker1."
  BrokerInstanceTypeForMyBroker1:
    Type: String
    Default: "mq.t3.micro"
    AllowedValues:
      - "mq.t3.micro"
      - "mq.m5.large"
    Description: "The broker instance type for MyBroker1."
  DeploymentModeForMyBroker1:
    Type: String
    Default: "SINGLE_INSTANCE"
    AllowedValues:
      - "SINGLE_INSTANCE"
      - "ACTIVE_STANDBY_MULTI_AZ"
    Description: "The deployment mode for the Amazon MQ broker for MyBroker1."
  EngineTypeForMyBroker1:
    Type: String
    Default: "ACTIVEMQ"
    AllowedValues:
      - "ACTIVEMQ"
      - "RABBITMQ"
    Description: "The message broker engine type for MyBroker1."
  EngineVersionForMyBroker1:
    Type: String
    Default: "5.17.1"
    Description: "The version of the broker engine for MyBroker1."
  SecretNameForMyBroker1:
    Type: String
    Default: "/MyBroker1/mq-password"
    Description: "The name of the secret storing the MQ broker password for MyBroker1."

  ClusterNameForMyCluster1:
    Type: String
    Default: "MyCluster1"
    Description: "The name of the MSK cluster for MyCluster1."
  BrokerInstanceTypeForMyCluster1:
    Type: String
    Default: "kafka.m5.large"
    Description: "The instance type for the Kafka brokers for MyCluster1."
  NumberOfBrokerNodesForMyCluster1:
    Type: Number
    Default: 3
    Description: "The number of broker nodes in the cluster for MyCluster1."

  ServiceNameForMyService1:
    Description: The name of the ECS service
    Type: String
    Default: MyService1
  DesiredCountForMyService1:
    Description: The desired number of tasks to run in the service
    Type: Number
    Default: 1
  ServiceNameForMyService2:
    Description: The name of the ECS service
    Type: String
    Default: MyService2
  DesiredCountForMyService2:
    Description: The desired number of tasks to run in the service
    Type: Number
    Default: 1
  ServiceNameForMyService3:
    Description: The name of the ECS service
    Type: String
    Default: MyService3
  DesiredCountForMyService3:
    Description: The desired number of tasks to run in the service
    Type: Number
    Default: 1
  ServiceNameForMyService4:
    Description: The name of the ECS service
    Type: String
    Default: MyService4
  DesiredCountForMyService4:
    Description: The desired number of tasks to run in the service
    Type: Number
    Default: 1
  ServiceNameForMyService5:
    Description: The name of the ECS service
    Type: String
    Default: MyService5
  DesiredCountForMyService5:
    Description: The desired number of tasks to run in the service
    Type: Number
    Default: 1
  ServiceNameForMyService6:
    Description: The name of the ECS service
    Type: String
    Default: MyService6
  DesiredCountForMyService6:
    Description: The desired number of tasks to run in the service
    Type: Number
    Default: 1
Resources: 
  MyBucket1:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketNameForMyBucket1
      VersioningConfiguration:
        Status: !If 
          - VersioningEnabledForMyBucket1 
          - Enabled 
          - Suspended
  MyCluster1:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Ref ClusterNameForMyCluster1
  MyTaskDefinition1:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref TaskDefinitionNameForMyTaskDefinition1
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Ref ContainerNameForMyTaskDefinition1
          Image: !Ref ContainerImageForMyTaskDefinition1
          PortMappings:
            - ContainerPort: !Ref ContainerPortForMyTaskDefinition1
          Memory: 512  # Adjust as needed
          Cpu: 256  # Adjust as needed
  MyTaskDefinition2:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref TaskDefinitionNameForMyTaskDefinition2
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Ref ContainerNameForMyTaskDefinition2
          Image: !Ref ContainerImageForMyTaskDefinition2
          PortMappings:
            - ContainerPort: !Ref ContainerPortForMyTaskDefinition2
          Memory: 512  # Adjust as needed
          Cpu: 256  # Adjust as needed
  MyTaskDefinition3:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref TaskDefinitionNameForMyTaskDefinition3
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Ref ContainerNameForMyTaskDefinition3
          Image: !Ref ContainerImageForMyTaskDefinition3
          PortMappings:
            - ContainerPort: !Ref ContainerPortForMyTaskDefinition3
          Memory: 512  # Adjust as needed
          Cpu: 256  # Adjust as needed
  MyTaskDefinition4:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref TaskDefinitionNameForMyTaskDefinition4
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Ref ContainerNameForMyTaskDefinition4
          Image: !Ref ContainerImageForMyTaskDefinition4
          PortMappings:
            - ContainerPort: !Ref ContainerPortForMyTaskDefinition4
          Memory: 512  # Adjust as needed
          Cpu: 256  # Adjust as needed
  MyTaskDefinition5:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref TaskDefinitionNameForMyTaskDefinition5
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Ref ContainerNameForMyTaskDefinition5
          Image: !Ref ContainerImageForMyTaskDefinition5
          PortMappings:
            - ContainerPort: !Ref ContainerPortForMyTaskDefinition5
          Memory: 512  # Adjust as needed
          Cpu: 256  # Adjust as needed
  MyTaskDefinition6:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref TaskDefinitionNameForMyTaskDefinition6
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Ref ContainerNameForMyTaskDefinition6
          Image: !Ref ContainerImageForMyTaskDefinition6
          PortMappings:
            - ContainerPort: !Ref ContainerPortForMyTaskDefinition6
          Memory: 512  # Adjust as needed
          Cpu: 256  # Adjust as needed
  MyVPC1:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCidrBlockForMyVPC1
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC1
  MyBucketPolicy1:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref MyBucket1
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${MyBucket1.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": "true"
            # Example condition for allowing secure transport only
  MySubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC1
      CidrBlock: !Ref SubnetCidrBlockForMySubnet1
      AvailabilityZone: !Ref AvailabilityZoneForMySubnet1
      MapPublicIpOnLaunch: true  # Set to true if you want instances to have public IPs by default
      Tags:
        - Key: Name
          Value: MySubnet1
  MyBroker1:
    Type: "AWS::AmazonMQ::Broker"
    Properties:
      BrokerName: !Ref BrokerNameForMyBroker1
      DeploymentMode: !Ref DeploymentModeForMyBroker1
      EngineType: !Ref EngineTypeForMyBroker1
      EngineVersion: !Ref EngineVersionForMyBroker1
      HostInstanceType: !Ref BrokerInstanceTypeForMyBroker1
      SubnetIds: !Ref MySubnet1
      Users:
        - Username: "admin"
          Password: !Sub "{{resolve:secretsmanager:${SecretNameForMyBroker1}:SecretString:password}}"
      PubliclyAccessible: false
      AutoMinorVersionUpgrade: true

  MyCluster1:
    Type: AWS::MSK::Cluster
    Properties:
      ClusterName: !Ref ClusterNameForMyCluster1
      KafkaVersion: "3.4.0" # Choose a supported Kafka version
      NumberOfBrokerNodes: !Ref NumberOfBrokerNodesForMyCluster1
      BrokerNodeGroupInfo:
        BrokerAZDistribution: "DEFAULT"
        ClientSubnets: !Ref MySubnet1
        InstanceType: !Ref BrokerInstanceTypeForMyCluster1
      EncryptionInfo:
        EncryptionAtRest:
          DataVolumeKMSKeyId: "alias/aws/kafka" # Default AWS-managed KMS key
        EncryptionInTransit:
          ClientBroker: "TLS"
          InCluster: true
      LoggingInfo:
        BrokerLogs:
          CloudWatchLogs:
            Enabled: true
            LogGroup: !Sub "/aws/msk/${ClusterNameForMyCluster1}"
          S3:
            Enabled: false
          Firehose:
            Enabled: false

  MyService1:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Ref ServiceNameForMyService1
      Cluster: !Ref MyCluster1
      DesiredCount: !Ref DesiredCountForMyService1
      TaskDefinition: !Ref MyTaskDefinition1
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref MySubnet1
          AssignPublicIp: ENABLED  # Change to DISABLED if not needed
  MyService2:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Ref ServiceNameForMyService2
      Cluster: !Ref MyCluster1
      DesiredCount: !Ref DesiredCountForMyService2
      TaskDefinition: !Ref MyTaskDefinition2
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref MySubnet1
          AssignPublicIp: ENABLED  # Change to DISABLED if not needed
  MyService3:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Ref ServiceNameForMyService3
      Cluster: !Ref MyCluster1
      DesiredCount: !Ref DesiredCountForMyService3
      TaskDefinition: !Ref MyTaskDefinition3
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref MySubnet1
          AssignPublicIp: ENABLED  # Change to DISABLED if not needed
  MyService4:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Ref ServiceNameForMyService4
      Cluster: !Ref MyCluster1
      DesiredCount: !Ref DesiredCountForMyService4
      TaskDefinition: !Ref MyTaskDefinition4
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref MySubnet1
          AssignPublicIp: ENABLED  # Change to DISABLED if not needed
  MyService5:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Ref ServiceNameForMyService5
      Cluster: !Ref MyCluster1
      DesiredCount: !Ref DesiredCountForMyService5
      TaskDefinition: !Ref MyTaskDefinition5
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref MySubnet1
          AssignPublicIp: ENABLED  # Change to DISABLED if not needed
  MyService6:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Ref ServiceNameForMyService6
      Cluster: !Ref MyCluster1
      DesiredCount: !Ref DesiredCountForMyService6
      TaskDefinition: !Ref MyTaskDefinition6
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref MySubnet1
          AssignPublicIp: ENABLED  # Change to DISABLED if not needed
Outputs: 
  S3BucketNameForMyBucket1:
    Description: The name of the created S3 bucket for MyBucket1
    Value: !Ref MyBucket1
  S3BucketArnForMyBucket1:
    Description: The ARN of the created S3 bucket for MyBucket1
    Value: !GetAtt MyBucket1.Arn
  ClusterNameOutputForMyCluster1:
    Description: The name of the created ECS cluster for MyCluster1
    Value: !Ref MyCluster1
  ClusterNameOutputForMyTaskDefinition1:
    Description: The name of the created ECS cluster for MyTaskDefinition1
    Value: !Ref MyTaskDefinition1
  ClusterNameOutputForMyTaskDefinition2:
    Description: The name of the created ECS cluster for MyTaskDefinition2
    Value: !Ref MyTaskDefinition2
  ClusterNameOutputForMyTaskDefinition3:
    Description: The name of the created ECS cluster for MyTaskDefinition3
    Value: !Ref MyTaskDefinition3
  ClusterNameOutputForMyTaskDefinition4:
    Description: The name of the created ECS cluster for MyTaskDefinition4
    Value: !Ref MyTaskDefinition4
  ClusterNameOutputForMyTaskDefinition5:
    Description: The name of the created ECS cluster for MyTaskDefinition5
    Value: !Ref MyTaskDefinition5
  ClusterNameOutputForMyTaskDefinition6:
    Description: The name of the created ECS cluster for MyTaskDefinition6
    Value: !Ref MyTaskDefinition6
  VPCId:
    Description: The ID of the created VPC for MyVPC1
    Value: !Ref MyVPC1
  SubnetId:
    Description: The ID of the created subnet for MySubnet1
    Value: !Ref MySubnet1
  BrokerNameOutputForMyBroker1:
    Description: "The name of the Amazon MQ broker for MyBroker1."
    Value: !Ref BrokerNameForMyBroker1
  BrokerEndpointOutputForMyBroker1:
    Description: "The endpoint for connecting to the Amazon MQ broker for MyBroker1."
    Value: !GetAtt MyBroker1.Arn

  ClusterArnForMyCluster1:
    Description: "The ARN of the MSK Cluster for MyCluster1"
    Value: !GetAtt MyCluster1.Arn

  ServiceNameOutputForMyService1:
    Description: The name of the created ECS service for MyService1
    Value: !Ref MyService1
  ServiceNameOutputForMyService2:
    Description: The name of the created ECS service for MyService2
    Value: !Ref MyService2
  ServiceNameOutputForMyService3:
    Description: The name of the created ECS service for MyService3
    Value: !Ref MyService3
  ServiceNameOutputForMyService4:
    Description: The name of the created ECS service for MyService4
    Value: !Ref MyService4
  ServiceNameOutputForMyService5:
    Description: The name of the created ECS service for MyService5
    Value: !Ref MyService5
  ServiceNameOutputForMyService6:
    Description: The name of the created ECS service for MyService6
    Value: !Ref MyService6
