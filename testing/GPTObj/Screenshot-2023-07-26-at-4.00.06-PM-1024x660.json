{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template for recognized AWS services",
    "Resources": {
        "CloudFrontDistribution": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Enabled": true,
                    "Origins": [
                        {
                            "DomainName": {
                                "Fn::GetAtt": [
                                    "S3Bucket",
                                    "DomainName"
                                ]
                            },
                            "Id": "S3Origin"
                        }
                    ],
                    "DefaultCacheBehavior": {
                        "TargetOriginId": "S3Origin",
                        "ViewerProtocolPolicy": "redirect-to-https"
                    }
                }
            }
        },
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": "endless-aisle-static-hosting"
            }
        },
        "WAFWebACL": {
            "Type": "AWS::WAFv2::WebACL",
            "Properties": {
                "Scope": "CLOUDFRONT",
                "DefaultAction": {
                    "Allow": {}
                },
                "VisibilityConfig": {
                    "CloudWatchMetricsEnabled": true,
                    "MetricName": "webACL",
                    "SampledRequestsEnabled": true
                }
            }
        },
        "APIGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "EndlessAisleAPI",
                "Description": "API Gateway for Endless Aisle",
                "EndpointConfiguration": {
                    "Types": [
                        "EDGE"
                    ]
                }
            }
        },
        "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
                "UserPoolName": "EndlessAisleUserPool"
            }
        },
        "SQSQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": "OrderQueue"
            }
        },
        "DynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "PartnersTable",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "PartnerID",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "PartnerID",
                        "KeyType": "HASH"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "LambdaGetOrder": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "get_order.handler",
                "Runtime": "python3.9",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": "def handler(event, context):\n    print('Get order function triggered')"
                }
            }
        },
        "LambdaCreateOrder": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "create_order.handler",
                "Runtime": "python3.9",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": "def handler(event, context):\n    print('Create order function triggered')"
                }
            }
        },
        "LambdaNotifier": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "notifier.handler",
                "Runtime": "python3.9",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": "def handler(event, context):\n    print('Notification sent')"
                }
            }
        },
        "LambdaDataSync": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "data_sync.handler",
                "Runtime": "python3.9",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": "def handler(event, context):\n    print('Data sync triggered')"
                }
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "LambdaExecutionPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*",
                                        "sqs:*",
                                        "cloudwatch:*",
                                        "logs:*"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        }
    }
}