{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template for the provided architecture diagram.",
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "172.16.0.0/16",
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "172.16.1.0/24",
                "AvailabilityZone": "us-east-1a",
                "MapPublicIpOnLaunch": true
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "172.16.2.0/24",
                "AvailabilityZone": "us-east-1b",
                "MapPublicIpOnLaunch": true
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "172.16.3.0/24",
                "AvailabilityZone": "us-east-1a"
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "172.16.4.0/24",
                "AvailabilityZone": "us-east-1b"
            }
        },
        "NATGateway1": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP1",
                        "AllocationId"
                    ]
                }
            }
        },
        "NATGateway2": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP2",
                        "AllocationId"
                    ]
                }
            }
        },
        "AutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PrivateSubnet1"
                    },
                    {
                        "Ref": "PrivateSubnet2"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MinSize": "1",
                "MaxSize": "5"
            }
        },
        "AmazonEKSCluster": {
            "Type": "AWS::EKS::Cluster",
            "Properties": {
                "Name": "EKS-Cluster",
                "ResourcesVpcConfig": {
                    "SubnetIds": [
                        {
                            "Ref": "PrivateSubnet1"
                        },
                        {
                            "Ref": "PrivateSubnet2"
                        }
                    ]
                },
                "RoleArn": "arn:aws:iam::123456789012:role/EKSRole"
            }
        },
        "AmazonRDSPostgreSQL": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBInstanceClass": "db.t3.micro",
                "AllocatedStorage": "20",
                "Engine": "postgres",
                "MasterUsername": "admin",
                "MasterUserPassword": "password",
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                }
            }
        },
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": "my-s3-bucket"
            }
        }
    }
}