{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "MyIoTThing": {
            "Type": "AWS::IoT::Thing",
            "Properties": {
                "ThingName": "MyIoTThing"
            }
        },
        "MyKMSKey": {
            "Type": "AWS::KMS::Key",
            "Properties": {
                "Description": "My KMS Key",
                "KeyPolicy": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "arn:aws:iam::123456789012:root"
                            },
                            "Action": "kms:*",
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "MyLambdaFunction1": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": "exports.handler = async () => 'RemoteCommand';\n"
                },
                "Handler": "index.handler",
                "Runtime": "nodejs14.x",
                "Role": "arn:aws:iam::123456789012:role/MyLambdaRole"
            }
        },
        "MyLambdaFunction2": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": "exports.handler = async () => 'ReceiveTelemetry';\n"
                },
                "Handler": "index.handler",
                "Runtime": "nodejs14.x",
                "Role": "arn:aws:iam::123456789012:role/MyLambdaRole"
            }
        },
        "MyDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "Id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "Id",
                        "KeyType": "HASH"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST"
            }
        },
        "MyApiGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "MyAPI"
            }
        },
        "MyIoTSecurityProfile": {
            "Type": "AWS::IoT::SecurityProfile",
            "Properties": {
                "SecurityProfileName": "MySecurityProfile",
                "Behaviors": [
                    {
                        "Name": "MyBehavior",
                        "Metric": "aws:message-byte-size",
                        "Criteria": {
                            "ComparisonOperator": "greater-than",
                            "Value": {
                                "Count": 10
                            }
                        }
                    }
                ],
                "TargetArns": []
            }
        },
        "MySecurityHub": {
            "Type": "AWS::SecurityHub::Hub",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "MySecurityHub"
                    }
                ]
            }
        },
        "MyStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "RoleArn": "arn:aws:iam::123456789012:role/MyStateMachineRole",
                "DefinitionString": "{\n  \"Comment\": \"A simple state machine\",\n  \"StartAt\": \"Remediation\",\n  \"States\": {\n    \"Remediation\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n      \"End\": true\n    }\n  }\n}\n"
            }
        },
        "MyEventRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "ScheduleExpression": "rate(5 minutes)",
                "State": "ENABLED",
                "Targets": []
            }
        },
        "MyLambdaFunction3": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": "exports.handler = async () => 'FindRemediation';\n"
                },
                "Handler": "index.handler",
                "Runtime": "nodejs14.x",
                "Role": "arn:aws:iam::123456789012:role/MyLambdaRole"
            }
        }
    }
}